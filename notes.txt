Schedule
    Commence : 9:30
    Tea Break : 11:00 Hrs (20 mins)
    Lunch Break : 13:00 Hrs (1 Hr)
    Tea Break : 15:30 Hrs (20 mins)
    Wind up : 17:30 Hrs

Github:
    http://Github.com/tkmagesh/ibm-react-may-2021

Agenda:
    What are RIA applications?
    Challenges in building RIA applications?
    How React solves it?
    ES6 & Above
    React Deep Dive
    State Management
    Async Operations
        callbacks
        promises
        async await
        observables
    Server communication
    Solving Async problems in redux
    Router
    Unit Testing
    E2E Testing (cypress)
    Build & Deployment

React
    - Framework
    - For building RIA (Rich Internet Applications)
    

React
    react.js
    react-dom.js


ES6 (ES2015 / ESNext / ECMAScript6)
1. let
2. const
3. Array destructuring
4. Rest operator (Array)
5. Spread operator (Array)
6. Object destructuring
7. Rest operator (Object)
8. Spread operator (Object)
9. Default arguments
10. Arrow functions
11. classes

http://es6-features.org


Difference between JSX & HTML

HTML
    Open tags with no matching close tags are allowed
    "for" attribute is allowed
    "class" attribute is allowed

JSX
    Every open tag must have a corresponding close tag
    use "htmlFor" in place of "for"
    use "className' in place of "class"


Create a Calculator component which will accept 2 operands from the user
Display 4 buttons for the operators (Add, Subtract, Multiply, Divide)
When any of the buttons are clicked, perform the respective operation and show the result to the user


UI State
    - Data that supports the presentation logic of the component
    - It is highly UNLIKELY that this data is needed in other parts of the application (outside this component)
    - Feel free to maintain this data in the component state

App State
    - Data that supports the domain of the application
    - It is highly LIKELY that this data is needed in other parts of the application
    - DONOT maintain this data in the component state

Managing Products
    
    Initial state = []

    Actions
        ADD_PRODUCT
        REMOVE_PRODUCT

React Hooks
    functions
        state,
        lifecycle
    must start with 'use'

    builtin hooks
        useState
        useEffects
        useReducer
        useRef
        useMemo
        useCallback

package manager
    yarn (alternative to npm)
    [sudo] npm install yarn -g

create-react-app

From the folder where we want to create the application
    yarn create react-app <app-name>

ES6 modules
    Any thing that is defined in a js/jsx file is considered private
    The public entities have to be explicitly exported
    Any public entity from another file has to be explicitly imported 


app setup
    /bugs
        /reducers
        /actions
        /views
        index.js
    /projects
        /reducers
        /actions
        /views
        index.js
    /store
        index.js
    /reducers
        index.js

To install redux
    yarn add redux (in the terminal)

react-redux
    adapter between react and redux
        - connect
        - Provider
    To install
        yarn add react-redux

redux middlewares
    encapsulate any logic that need to be applied across all the actions
    

1. Populate the projects drop down in the bug tracker with the projects that are added
2. When a new bug is created, associate the new bug with the selected project (project id)
3. When bugs are displayed, display the projectname and id for each bug
4. When a project is selected (in the projects module), display only the bugs belonging to that project
5. Req 4 should be applied only when the "Apply projects filter" checkbox is checked


JSON-SERVER
    expose the data from a json file as restful services

axios

Async Operation
    

axios.post('http://localhost:3030/bugs', newBug)
axios.put('http://localhost:3030/bugs/1', updatedBug)
axios.delete('http://localhost:3030/bugs/1')